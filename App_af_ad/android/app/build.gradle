def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        //multiDexEnabled true
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "st.fa.ad"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion 23
        targetSdkVersion 33
        versionCode 100
        versionName '1.0.0'

        //store 114
        //dc 128
    }

    signingConfigs {
        release {
            storeFile rootProject.file('win.keystore')
            keyAlias 'technology ecosystem'
            keyPassword '1234567890'
            storePassword '1234567890'
        }
        debug {
            storeFile rootProject.file('win.keystore')
            keyAlias 'technology ecosystem'
            keyPassword '1234567890'
            storePassword '1234567890'
        }
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    //androidTestImplementation "androidx.test.ext:junit:1.1.3"
    //androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.0.4"
    //implementation 'androidx.multidex:multidex:2.0.1'
    implementation fileTree(dir: "libs", includes: ["*.jar", "*.aar"])
}