def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '101'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0.1'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

// winsetup
def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}
// winsetup

android {
    compileSdkVersion 31

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        //applicationId "etech.mobile.syngentaaudit"
        applicationId "etech.mobile.franciaaudit"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode 103
        versionName '1.0.3'
    }
    // winsetup
    signingConfigs {
        release {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
//            storePassword keystoreProperties['storePassword']
            // New
            storeFile rootProject.file('win.keystore')
            keyAlias 'technology ecosystem'
            keyPassword '1234567890'
            storePassword '1234567890'

            //minifyEnabled true
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            storeFile rootProject.file('win.keystore')
            keyAlias 'technology ecosystem'
            keyPassword '1234567890'
            storePassword '1234567890'
        }
    }
    // winsetup

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            //minifyEnabled true
            //useProguard true
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            //shrinkResources true
        }
        // winsetup
        //debug {
         //   signingConfig signingConfigs.debug
            //minifyEnabled true
            //useProguard true
            //proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            //shrinkResources true
        //}
    }
}

flutter {
    source '../..'
}
dependencies {
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:1.0.4"

}
